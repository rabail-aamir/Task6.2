pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven...'
                // Example tool: Maven
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests using JUnit...'
                // Example tool: JUnit for unit tests, Selenium for integration tests
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Analyzing the code quality using SonarQube...'
                // Example tool: SonarQube
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan using OWASP ZAP...'
                // Example tool: OWASP ZAP
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying the application to the staging environment...'
                // Example environment: AWS EC2
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on the staging environment using Selenium...'
                // Example tool: Selenium
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to the production environment...'
                // Example environment: AWS EC2
            }
        }
    }

    post {
        always {
            echo 'Sending email notifications...'
            emailext (
                subject: "Pipeline ${currentBuild.fullDisplayName}",
                body: "Pipeline has completed. Stage: ${env.STAGE_NAME}",
                to: "rabailaamir993@gmail.com"
            )
        }
    }
}
